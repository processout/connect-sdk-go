// Copyright 2017 The go-github AUTHORS. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by gen-accessors; DO NOT EDIT.

package refund

// GetAmount returns the Amount field if it's non-nil, zero value otherwise.
func (a *ApproveRequest) GetAmount() int64 {
	if a == nil || a.Amount == nil {
		return 0
	}
	return *a.Amount
}

// GetAccountHolderName returns the AccountHolderName field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetAccountHolderName() string {
	if b == nil || b.AccountHolderName == nil {
		return ""
	}
	return *b.AccountHolderName
}

// GetAccountNumber returns the AccountNumber field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetAccountNumber() string {
	if b == nil || b.AccountNumber == nil {
		return ""
	}
	return *b.AccountNumber
}

// GetBankCity returns the BankCity field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetBankCity() string {
	if b == nil || b.BankCity == nil {
		return ""
	}
	return *b.BankCity
}

// GetBankCode returns the BankCode field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetBankCode() string {
	if b == nil || b.BankCode == nil {
		return ""
	}
	return *b.BankCode
}

// GetBankName returns the BankName field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetBankName() string {
	if b == nil || b.BankName == nil {
		return ""
	}
	return *b.BankName
}

// GetBranchCode returns the BranchCode field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetBranchCode() string {
	if b == nil || b.BranchCode == nil {
		return ""
	}
	return *b.BranchCode
}

// GetCheckDigit returns the CheckDigit field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetCheckDigit() string {
	if b == nil || b.CheckDigit == nil {
		return ""
	}
	return *b.CheckDigit
}

// GetCountryCode returns the CountryCode field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetCountryCode() string {
	if b == nil || b.CountryCode == nil {
		return ""
	}
	return *b.CountryCode
}

// GetPatronymicName returns the PatronymicName field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetPatronymicName() string {
	if b == nil || b.PatronymicName == nil {
		return ""
	}
	return *b.PatronymicName
}

// GetSwiftCode returns the SwiftCode field if it's non-nil, zero value otherwise.
func (b *BankAccountBbanRefund) GetSwiftCode() string {
	if b == nil || b.SwiftCode == nil {
		return ""
	}
	return *b.SwiftCode
}

// GetBankAccountBban returns the BankAccountBban field.
func (b *BankRefundMethodSpecificInput) GetBankAccountBban() *BankAccountBbanRefund {
	if b == nil {
		return nil
	}
	return b.BankAccountBban
}

// GetCountryCode returns the CountryCode field if it's non-nil, zero value otherwise.
func (b *BankRefundMethodSpecificInput) GetCountryCode() string {
	if b == nil || b.CountryCode == nil {
		return ""
	}
	return *b.CountryCode
}

// GetFiscalNumber returns the FiscalNumber field if it's non-nil, zero value otherwise.
func (c *Customer) GetFiscalNumber() string {
	if c == nil || c.FiscalNumber == nil {
		return ""
	}
	return *c.FiscalNumber
}

// GetErrorID returns the ErrorID field if it's non-nil, zero value otherwise.
func (e *ErrorResponse) GetErrorID() string {
	if e == nil || e.ErrorID == nil {
		return ""
	}
	return *e.ErrorID
}

// GetRefundResult returns the RefundResult field.
func (e *ErrorResponse) GetRefundResult() *Result {
	if e == nil {
		return nil
	}
	return e.RefundResult
}

// GetLimit returns the Limit field if it's non-nil, zero value otherwise.
func (f *FindResponse) GetLimit() int32 {
	if f == nil || f.Limit == nil {
		return 0
	}
	return *f.Limit
}

// GetOffset returns the Offset field if it's non-nil, zero value otherwise.
func (f *FindResponse) GetOffset() int32 {
	if f == nil || f.Offset == nil {
		return 0
	}
	return *f.Offset
}

// GetRefunds returns the Refunds field if it's non-nil, zero value otherwise.
func (f *FindResponse) GetRefunds() []Result {
	if f == nil || f.Refunds == nil {
		return nil
	}
	return *f.Refunds
}

// GetTotalCount returns the TotalCount field if it's non-nil, zero value otherwise.
func (f *FindResponse) GetTotalCount() int32 {
	if f == nil || f.TotalCount == nil {
		return 0
	}
	return *f.TotalCount
}

// GetMerchantReference returns the MerchantReference field if it's non-nil, zero value otherwise.
func (r *References) GetMerchantReference() string {
	if r == nil || r.MerchantReference == nil {
		return ""
	}
	return *r.MerchantReference
}

// GetRefunds returns the Refunds field if it's non-nil, zero value otherwise.
func (r *RefundsResponse) GetRefunds() []Result {
	if r == nil || r.Refunds == nil {
		return nil
	}
	return *r.Refunds
}

// GetBankRefundMethodSpecificInput returns the BankRefundMethodSpecificInput field.
func (r *Request) GetBankRefundMethodSpecificInput() *BankRefundMethodSpecificInput {
	if r == nil {
		return nil
	}
	return r.BankRefundMethodSpecificInput
}

// GetCustomer returns the Customer field.
func (r *Request) GetCustomer() *Customer {
	if r == nil {
		return nil
	}
	return r.Customer
}

// GetRefundDate returns the RefundDate field if it's non-nil, zero value otherwise.
func (r *Request) GetRefundDate() string {
	if r == nil || r.RefundDate == nil {
		return ""
	}
	return *r.RefundDate
}

// GetRefundReferences returns the RefundReferences field.
func (r *Request) GetRefundReferences() *References {
	if r == nil {
		return nil
	}
	return r.RefundReferences
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (r *Response) GetID() string {
	if r == nil || r.ID == nil {
		return ""
	}
	return *r.ID
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (r *Response) GetStatus() string {
	if r == nil || r.Status == nil {
		return ""
	}
	return *r.Status
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (r *Result) GetID() string {
	if r == nil || r.ID == nil {
		return ""
	}
	return *r.ID
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (r *Result) GetStatus() string {
	if r == nil || r.Status == nil {
		return ""
	}
	return *r.Status
}
