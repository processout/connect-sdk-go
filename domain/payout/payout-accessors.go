// Copyright 2017 The go-github AUTHORS. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by gen-accessors; DO NOT EDIT.

package payout

// GetDatePayout returns the DatePayout field if it's non-nil, zero value otherwise.
func (a *ApproveRequest) GetDatePayout() string {
	if a == nil || a.DatePayout == nil {
		return ""
	}
	return *a.DatePayout
}

// GetCustomer returns the Customer field.
func (b *BankTransferPayoutMethodSpecificInput) GetCustomer() *Customer {
	if b == nil {
		return nil
	}
	return b.Customer
}

// GetPayoutDate returns the PayoutDate field if it's non-nil, zero value otherwise.
func (b *BankTransferPayoutMethodSpecificInput) GetPayoutDate() string {
	if b == nil || b.PayoutDate == nil {
		return ""
	}
	return *b.PayoutDate
}

// GetPayoutText returns the PayoutText field if it's non-nil, zero value otherwise.
func (b *BankTransferPayoutMethodSpecificInput) GetPayoutText() string {
	if b == nil || b.PayoutText == nil {
		return ""
	}
	return *b.PayoutText
}

// GetSwiftCode returns the SwiftCode field if it's non-nil, zero value otherwise.
func (b *BankTransferPayoutMethodSpecificInput) GetSwiftCode() string {
	if b == nil || b.SwiftCode == nil {
		return ""
	}
	return *b.SwiftCode
}

// GetPaymentProductID returns the PaymentProductID field if it's non-nil, zero value otherwise.
func (c *CardPayoutMethodSpecificInput) GetPaymentProductID() int32 {
	if c == nil || c.PaymentProductID == nil {
		return 0
	}
	return *c.PaymentProductID
}

// GetToken returns the Token field if it's non-nil, zero value otherwise.
func (c *CardPayoutMethodSpecificInput) GetToken() string {
	if c == nil || c.Token == nil {
		return ""
	}
	return *c.Token
}

// GetBankTransferPayoutMethodSpecificInput returns the BankTransferPayoutMethodSpecificInput field.
func (c *CreateRequest) GetBankTransferPayoutMethodSpecificInput() *BankTransferPayoutMethodSpecificInput {
	if c == nil {
		return nil
	}
	return c.BankTransferPayoutMethodSpecificInput
}

// GetCardPayoutMethodSpecificInput returns the CardPayoutMethodSpecificInput field.
func (c *CreateRequest) GetCardPayoutMethodSpecificInput() *CardPayoutMethodSpecificInput {
	if c == nil {
		return nil
	}
	return c.CardPayoutMethodSpecificInput
}

// GetCustomer returns the Customer field.
func (c *CreateRequest) GetCustomer() *Customer {
	if c == nil {
		return nil
	}
	return c.Customer
}

// GetPayoutDate returns the PayoutDate field if it's non-nil, zero value otherwise.
func (c *CreateRequest) GetPayoutDate() string {
	if c == nil || c.PayoutDate == nil {
		return ""
	}
	return *c.PayoutDate
}

// GetPayoutText returns the PayoutText field if it's non-nil, zero value otherwise.
func (c *CreateRequest) GetPayoutText() string {
	if c == nil || c.PayoutText == nil {
		return ""
	}
	return *c.PayoutText
}

// GetReferences returns the References field.
func (c *CreateRequest) GetReferences() *References {
	if c == nil {
		return nil
	}
	return c.References
}

// GetSwiftCode returns the SwiftCode field if it's non-nil, zero value otherwise.
func (c *CreateRequest) GetSwiftCode() string {
	if c == nil || c.SwiftCode == nil {
		return ""
	}
	return *c.SwiftCode
}

// GetMerchantCustomerID returns the MerchantCustomerID field if it's non-nil, zero value otherwise.
func (c *Customer) GetMerchantCustomerID() string {
	if c == nil || c.MerchantCustomerID == nil {
		return ""
	}
	return *c.MerchantCustomerID
}

// GetErrorID returns the ErrorID field if it's non-nil, zero value otherwise.
func (e *ErrorResponse) GetErrorID() string {
	if e == nil || e.ErrorID == nil {
		return ""
	}
	return *e.ErrorID
}

// GetPayoutResult returns the PayoutResult field.
func (e *ErrorResponse) GetPayoutResult() *Result {
	if e == nil {
		return nil
	}
	return e.PayoutResult
}

// GetLimit returns the Limit field if it's non-nil, zero value otherwise.
func (f *FindResponse) GetLimit() int32 {
	if f == nil || f.Limit == nil {
		return 0
	}
	return *f.Limit
}

// GetOffset returns the Offset field if it's non-nil, zero value otherwise.
func (f *FindResponse) GetOffset() int32 {
	if f == nil || f.Offset == nil {
		return 0
	}
	return *f.Offset
}

// GetPayouts returns the Payouts field if it's non-nil, zero value otherwise.
func (f *FindResponse) GetPayouts() []Result {
	if f == nil || f.Payouts == nil {
		return nil
	}
	return *f.Payouts
}

// GetTotalCount returns the TotalCount field if it's non-nil, zero value otherwise.
func (f *FindResponse) GetTotalCount() int32 {
	if f == nil || f.TotalCount == nil {
		return 0
	}
	return *f.TotalCount
}

// GetInvoiceNumber returns the InvoiceNumber field if it's non-nil, zero value otherwise.
func (r *References) GetInvoiceNumber() string {
	if r == nil || r.InvoiceNumber == nil {
		return ""
	}
	return *r.InvoiceNumber
}

// GetMerchantOrderID returns the MerchantOrderID field if it's non-nil, zero value otherwise.
func (r *References) GetMerchantOrderID() int64 {
	if r == nil || r.MerchantOrderID == nil {
		return 0
	}
	return *r.MerchantOrderID
}

// GetMerchantReference returns the MerchantReference field if it's non-nil, zero value otherwise.
func (r *References) GetMerchantReference() string {
	if r == nil || r.MerchantReference == nil {
		return ""
	}
	return *r.MerchantReference
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (r *Response) GetID() string {
	if r == nil || r.ID == nil {
		return ""
	}
	return *r.ID
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (r *Response) GetStatus() string {
	if r == nil || r.Status == nil {
		return ""
	}
	return *r.Status
}

// GetID returns the ID field if it's non-nil, zero value otherwise.
func (r *Result) GetID() string {
	if r == nil || r.ID == nil {
		return ""
	}
	return *r.ID
}

// GetStatus returns the Status field if it's non-nil, zero value otherwise.
func (r *Result) GetStatus() string {
	if r == nil || r.Status == nil {
		return ""
	}
	return *r.Status
}
